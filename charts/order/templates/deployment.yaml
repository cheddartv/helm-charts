{{- if .Values.deployment}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.deployment.name}}
  namespace: {{.Values.deployment.namespace}}
  labels:
{{- if .Values.deployment.app_labels}}
{{.Values.app_labels | toYaml | trim | indent 4 }}
{{- end}}
{{- if not .Values.deployment.app_labels}}
    app: {{.Values.deployment.name}}
{{- end}}
  {{- if .Values.annotations}}
  annotations: {{.Values.annotations | toYaml | trim | nindent 4}}
  {{- end}}
spec:
  replicas: {{.Values.deployment.replicas}}
  selector:
    matchLabels:
{{- if .Values.deployment.app_labels}}
{{.Values.deployment.app_labels | toYaml | trim | indent 6}}
{{- end}}
{{- if not .Values.deployment.app_labels}}
      app: {{.Values.deployment.name}}
{{- end}}
  template:
    metadata:
      labels:
{{- if .Values.deployment.app_labels}}
{{.Values.deployment.app_labels | toYaml | trim | indent 8}}
{{- end}}
      {{- if not .Values.deployment.app_labels}}
        app: {{.Values.deployment.name}}
      {{- end}}
    spec:
      {{- if .Values.deployment.affinity}}
      affinity: {{ .Values.deployment.affinity | toYaml | trim | nindent 8}}
      {{- end}}
      {{- if .Values.deployment.volumes}}
      volumes: {{.Values.deployment.volumes | toYaml | trim | nindent 6}}
      {{- end -}}
      {{- if .Values.deployment.imagePullSecrets}}
      imagePullSecrets: {{.Values.deployment.imagePullSecrets | toYaml | trim | nindent 6}}
      {{- end}}
      containers:
      - name: {{or .Values.deployment.container_name .Values.deployment.name}}
        image: {{.Values.deployment.image}}
        {{- if .Values.deployment.container_command}}
        command: {{.Values.deployment.container_command}}
        {{- end}}
        {{- if .Values.deployment.container_args}}
        args:
          {{- range $arg := .Values.deployment.container_args}}
          - {{$arg | quote}}
          {{- end}}
        {{- end}}
        {{- if .Values.deployment.readiness_path}}
        readinessProbe:
          httpGet:
            path: {{.Values.deployment.readiness_path}}
            port: {{or .Values.deployment.readiness_port .Values.deployment.port}}
            {{- if .Values.deployment.readiness_httpHeaders}}
            httpHeaders: {{.Values.deployment.readiness_httpHeaders | toYaml | trim | nindent 12}}
            {{- end}}
          initialDelaySeconds: {{or .Values.deployment.readiness_delay 5}}
          failureThreshold: {{or .Values.deployment.readiness_failure_threshold 5}}
          periodSeconds: {{or .Values.deployment.readiness_period 3}}
        {{- end}}
        {{- if .Values.deployment.liveness_path}}
        livenessProbe:
          httpGet:
            path: {{.Values.deployment.liveness_path}}
            port: {{or .Values.deployment.liveness_port .Values.deployment.port}}
            {{- if .Values.deployment.liveness_httpHeaders}}
            httpHeaders: {{.Values.deployment.liveness_httpHeaders | toYaml | trim | nindent 12}}
            {{- end}}
          initialDelaySeconds: {{or .Values.deployment.liveness_delay 5}}
          failureThreshold: {{or .Values.deployment.liveness_failure_threshold 5}}
          periodSeconds: {{or .Values.deployment.liveness_period 3}}
        {{- end}}
        {{- if or .Values.deployment.env.config .Values.deployment.env.secrets}}
        envFrom:
        {{- if .Values.deployment.env.config}}
        - configMapRef:
            name: {{.Values.deployment.name}}
        {{- end}}
        {{- if .Values.deployment.env.secrets}}
        {{- range $value := .Values.deployment.env.secrets.names}}
        - secretRef:
            name: {{$value}}
        {{- end}}
        {{- end}}
        {{- end}}
        {{- if or .Values.deployment.resources.limits .Values.deployment.resources.requests}}
        resources:
        {{- if .Values.deployment.resources.limits}}
          limits:
            cpu: {{.Values.deployment.resources.limits.cpu}}
            memory: {{.Values.deployment.resources.limits.memory}}
        {{- end}}
        {{- if .Values.deployment.resources.requests}}
          requests:
            cpu: {{.Values.deployment.resources.requests.cpu}}
            memory: {{.Values.deployment.resources.requests.memory}}
        {{- end}}
        {{- end}}
        {{- if .Values.deployment.port}}
        ports:
        - containerPort: {{.Values.deployment.port}}
          name: {{.Values.deployment.portname}}
        {{- end}}
        {{- if .Values.deployment.multi_ports}}
        ports: {{.Values.deployment.multi_ports | toYaml | trim | nindent 8}}
        {{- end}}
        {{- if .Values.deployment.volumeMounts}}
        volumeMounts: {{.Values.deployment.volumeMounts | toYaml | trim | nindent 8}}
        {{- end}}
      {{- if .Values.deployment.promExporter}}
      - name: {{.Values.deployment.promExporter.name}}
        image: {{.Values.deployment.image}}
        {{- if .Values.deployment.promExporter.command}}
        command: {{.Values.deployment.promExporter.command}}
        {{- end}}
        {{- if .Values.deployment.promExporter.args}}
        args:
          {{- range $arg := .Values.deployment.promExporter.args}}
          - {{$arg | quote}}
          {{- end}}
        {{- end}}
        {{- if .Values.deployment.promExporter.port}}
        ports:
        - containerPort: {{.Values.deployment.promExporter.port}}
        {{- end}}
        {{- if .Values.deployment.promExporter_resources}}
        resources: {{.Values.deployment.promExporter_resources | toYaml | trim | nindent 10}}
        {{- end }}
      {{- end }}
{{- end}}